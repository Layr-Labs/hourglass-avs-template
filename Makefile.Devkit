# This Makefile is specifically used as an interface for the devkit-cli.
#
# If you need to modify how your project is build, you should modify the main Makefile
.PHONY: build
build:
	BUILD_CONTAINER=true setup-hourglass ./.hourglass/scripts/build.sh

.PHONY: run
run:
	./.hourglass/scripts/run.sh

GIT_HOURGLASS_REPO=git@github.com:Layr-Labs/hourglass-monorepo.git
HOURGLASS_DIR=./temp_external/hourglass-monorepo
HOURGLASS_COMMIT=fc82a2b32c486bd6027288cf451ca20b8370784e

.PHONY: setup-hourglass
setup-hourglass: ## Clone and wire up hourglass-monorepo locally
	@echo "ðŸ“¦ Cloning hourglass-monorepo to $(HOURGLASS_DIR)..."
	@rm -rf $(HOURGLASS_DIR)
	@git clone $(GIT_HOURGLASS_REPO) $(HOURGLASS_DIR)
	@cd $(HOURGLASS_DIR) && git checkout $(HOURGLASS_COMMIT)
	@echo "ðŸ”§ Replacing Go module path to use local clone..."
	@go mod edit -replace=github.com/Layr-Labs/hourglass-monorepo=$(HOURGLASS_DIR)
	@go mod edit -replace=github.com/Layr-Labs/hourglass-monorepo/contracts=$(HOURGLASS_DIR)/contracts
	@go mod tidy
	@echo "âœ… hourglass-monorepo (commit: $(HOURGLASS_COMMIT)) linked successfully"

.PHONY: create-operator-set
create-operator-set:
	@bash -c '\
		eval "$$(go run ./.hourglass/go-scripts/parse_operator_sets.go eigen.toml)"; \
		eval "$$(go run ./.hourglass/go-scripts/parse_rpc_url.go eigen.toml)"; \
		for alias in $$OPERATOR_ALIAS_list; do \
			alias_var=$$(echo $$alias | tr a-z- A-Z_); \
			operator_set_id=$$(eval echo \$${$${alias_var}_OPERATOR_SET_ID}); \
			echo "Creating operator set: $$alias with ID=$$operator_set_id"; \
			RPC_URL=$$RPC_URL OPERATOR_SET_ID=$$operator_set_id ./.hourglass/scripts/create-operator-set.sh; \
		done'


.PHONY: setup-submodules
setup-submodules:
	./.hourglass/scripts/devnet.sh

.PHONY: deploy-taskmailbox
deploy-taskmailbox:
	@eval "$$(go run ./.hourglass/go-scripts/parse_rpc_url.go eigen.toml)" && \
	chmod +x ./.hourglass/scripts/deploy-mailbox.sh && \
	RPC_URL=$${RPC_URL} ./.hourglass/scripts/deploy-mailbox.sh

.PHONY: deploy-taskavsregistrar
deploy-taskavsregistrar:
	@eval "$$(go run ./.hourglass/go-scripts/parse_rpc_url.go eigen.toml)" && \
	chmod +x ./.hourglass/scripts/deploy-taskavsregistrar.sh && \
	RPC_URL=$${RPC_URL} ./.hourglass/scripts/deploy-taskavsregistrar.sh

.PHONY: deploy-avsl2contracts
deploy-avsl2contracts:
	@eval "$$(go run ./.hourglass/go-scripts/parse_rpc_url.go eigen.toml)" && \
	chmod +x ./.hourglass/scripts/deploy-avsl2contracts.sh && \
	RPC_URL=$${RPC_URL} ./.hourglass/scripts/deploy-avsl2contracts.sh

.PHONY: setup-avsl1contracts
setup-avsl1contracts:
	@eval "$$(go run ./.hourglass/go-scripts/parse_rpc_url.go eigen.toml)" && \
	chmod +x ./.hourglass/scripts/setup-avsl1contracts.sh && \
	RPC_URL=$${RPC_URL} ./.hourglass/scripts/setup-avsl1contracts.sh

.PHONY: setup-avstaskmailbox-config
setup-avstaskmailbox-config:
	@eval "$$(go run ./.hourglass/go-scripts/parse_rpc_url.go eigen.toml)" && \
	chmod +x ./.hourglass/scripts/setup-avstaskmailbox-config.sh && \
	RPC_URL=$${RPC_URL} ./.hourglass/scripts/setup-avstaskmailbox-config.sh

.PHONY: register-operator-to-eigenlayer
register-operator-to-eigenlayer:
	@bash -c '\
		eval "$$(go run ./.hourglass/go-scripts/parse_operator_keys.go eigen.toml)"; \
		eval "$$(go run ./.hourglass/go-scripts/parse_rpc_url.go eigen.toml)"; \
		chmod +x ./.hourglass/scripts/register-operator-to-eigenlayer.sh; \
		for key in $$OPERATOR_KEYS_list; do \
			echo "Registering operator key: $$key"; \
			OPERATOR_PVT_KEY=$$key RPC_URL=$$RPC_URL ./.hourglass/scripts/register-operator-to-eigenlayer.sh; \
		done'

.PHONY: register-operator-to-avs
register-operator-to-avs:
	@bash -c '\
		set -euo pipefail; \
		eval "$$(go run ./.hourglass/go-scripts/parse_operator_keys.go eigen.toml)"; \
		eval "$$(go run ./.hourglass/go-scripts/parse_rpc_url.go eigen.toml)"; \
		read -a KEYS_ARRAY <<< "$$OPERATOR_KEYS_list"; \
		export KEYSTORE_COUNT=$${#KEYS_ARRAY[@]}; \
		for (( i=0; i<$$KEYSTORE_COUNT; i++ )); do \
			export OPERATOR_KEY=$${KEYS_ARRAY[$$i]}; \
			echo "ðŸ”‘ Registering operator $$i: $$OPERATOR_KEY"; \
			eval "$$(go run ./.hourglass/go-scripts/parse_keystores.go eigen.toml)"; \
			eval "$$(RPC_URL=$$RPC_URL REGISTRAR_ADDRESS=$$REGISTRAR_ADDRESS OPERATOR_KEY=$$OPERATOR_KEY go run ./.hourglass/go-scripts/get_pubkey_registration_hash.go)"; \
			export OPERATOR_INDEX=$$i; \
			eval "$$(OPERATOR_BLSPRIVATE_KEY=$$OPERATOR_KEY PUBKEY_REGISTRATION_MESSAGE_HASH_X_POINT=$$PUBKEY_REGISTRATION_MESSAGE_HASH_X_POINT PUBKEY_REGISTRATION_MESSAGE_HASH_Y_POINT=$$PUBKEY_REGISTRATION_MESSAGE_HASH_Y_POINT go run ./.hourglass/go-scripts/sign_pubkey_hash.go)"; \
			OPERATOR_PVT_KEY=$$OPERATOR_KEY RPC_URL=$$RPC_URL \
			G1_X=$$(eval echo \$$OPERATOR_$${i}_G1_X) \
			G1_Y=$$(eval echo \$$OPERATOR_$${i}_G1_Y) \
			G2_X0=$$(eval echo \$$OPERATOR_$${i}_G2_X0) \
			G2_X1=$$(eval echo \$$OPERATOR_$${i}_G2_X1) \
			G2_Y0=$$(eval echo \$$OPERATOR_$${i}_G2_Y0) \
			G2_Y1=$$(eval echo \$$OPERATOR_$${i}_G2_Y1) \
			PUBKEY_REGISTRATION_MESSAGE_HASH_X_POINT=$$PUBKEY_REGISTRATION_MESSAGE_HASH_X_POINT \
			PUBKEY_REGISTRATION_MESSAGE_HASH_Y_POINT=$$PUBKEY_REGISTRATION_MESSAGE_HASH_Y_POINT \
			PUBKEY_REGISTRATION_SIGNATURE_X=$$PUBKEY_REGISTRATION_SIGNATURE_X \
			PUBKEY_REGISTRATION_SIGNATURE_Y=$$PUBKEY_REGISTRATION_SIGNATURE_Y \
			./.hourglass/scripts/register-operator-to-avs.sh; \
		done'












