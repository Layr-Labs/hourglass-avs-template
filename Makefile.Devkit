# This Makefile is specifically used as an interface for the devkit-cli.
#
# If you need to modify how your project is build, you should modify the main Makefile
.PHONY: build
build:
	./.hourglass/scripts/devnet.sh
	@$(MAKE) setup-hourglass
	BUILD_CONTAINER=true ./.hourglass/scripts/build.sh

.PHONY: run
run:
	./.hourglass/scripts/run.sh

GIT_HOURGLASS_REPO=git@github.com:Layr-Labs/hourglass-monorepo.git
HOURGLASS_DIR=./temp_external/hourglass-monorepo
HOURGLASS_COMMIT=fc82a2b32c486bd6027288cf451ca20b8370784e

.PHONY: setup-hourglass
setup-hourglass: ## Clone and wire up hourglass-monorepo locally
	@echo "📦 Cloning hourglass-monorepo to $(HOURGLASS_DIR)..."
	@rm -rf $(HOURGLASS_DIR)
	@git clone $(GIT_HOURGLASS_REPO) $(HOURGLASS_DIR)
	@cd $(HOURGLASS_DIR) && git checkout $(HOURGLASS_COMMIT)
	@echo "🔧 Replacing Go module path to use local clone..."
	@go mod edit -replace=github.com/Layr-Labs/hourglass-monorepo=$(HOURGLASS_DIR)
	@go mod edit -replace=github.com/Layr-Labs/hourglass-monorepo/contracts=$(HOURGLASS_DIR)/contracts
	@go mod tidy
	@echo "✅ hourglass-monorepo (commit: $(HOURGLASS_COMMIT)) linked successfully"

.PHONY: create-operator-set
create-operator-set:
	@bash -c '\
		eval "$$(go run ./go-scripts/parse_operator_sets.go eigen.toml)"; \
		eval "$$(go run ./go-scripts/parse_rpc_url.go eigen.toml)"; \
		for alias in $$OPERATOR_ALIAS_list; do \
			alias_var=$$(echo $$alias | tr a-z- A-Z_); \
			operator_set_id=$$(eval echo \$${$${alias_var}_OPERATOR_SET_ID}); \
			echo "Creating operator set: $$alias with ID=$$operator_set_id"; \
			RPC_URL=$$RPC_URL OPERATOR_SET_ID=$$operator_set_id ./.hourglass/scripts/create-operator-set.sh; \
		done'


.PHONY: setup-submodules
setup-submodules:
	./.hourglass/scripts/devnet.sh

.PHONY: deploy-taskmailbox
deploy-taskmailbox:
	@eval "$$(go run ./go-scripts/parse_rpc_url.go eigen.toml)" && \
	chmod +x ./.hourglass/scripts/deploy-mailbox.sh && \
	RPC_URL=$${RPC_URL} ./.hourglass/scripts/deploy-mailbox.sh

.PHONY: deploy-taskavsregistrar
deploy-taskavsregistrar:
	@eval "$$(go run ./go-scripts/parse_rpc_url.go eigen.toml)" && \
	chmod +x ./.hourglass/scripts/deploy-taskavsregistrar.sh && \
	RPC_URL=$${RPC_URL} ./.hourglass/scripts/deploy-taskavsregistrar.sh

.PHONY: deploy-avsl2contracts
deploy-avsl2contracts:
	@eval "$$(go run ./go-scripts/parse_rpc_url.go eigen.toml)" && \
	chmod +x ./.hourglass/scripts/deploy-avsl2contracts.sh && \
	RPC_URL=$${RPC_URL} ./.hourglass/scripts/deploy-avsl2contracts.sh

.PHONY: setup-avsl1contracts
setup-avsl1contracts:
	@eval "$$(go run ./go-scripts/parse_rpc_url.go eigen.toml)" && \
	chmod +x ./.hourglass/scripts/setup-avsl1contracts.sh && \
	RPC_URL=$${RPC_URL} ./.hourglass/scripts/setup-avsl1contracts.sh

.PHONY: setup-avstaskmailbox-config
setup-avstaskmailbox-config:
	@eval "$$(go run ./go-scripts/parse_rpc_url.go eigen.toml)" && \
	chmod +x ./.hourglass/scripts/setup-avstaskmailbox-config.sh && \
	RPC_URL=$${RPC_URL} ./.hourglass/scripts/setup-avstaskmailbox-config.sh

.PHONY: register-operator-to-eigenlayer
register-operator-to-eigenlayer:
	@bash -c '\
		eval "$$(go run ./go-scripts/parse_operator_keys.go eigen.toml)"; \
		eval "$$(go run ./go-scripts/parse_rpc_url.go eigen.toml)"; \
		chmod +x ./.hourglass/scripts/register-operator-to-eigenlayer.sh; \
		for key in $$OPERATOR_KEYS_list; do \
			echo "Registering operator key: $$key"; \
			OPERATOR_PVT_KEY=$$key RPC_URL=$$RPC_URL ./.hourglass/scripts/register-operator-to-eigenlayer.sh; \
		done'

.PHONY: register-operator-to-avs
register-operator-to-avs:
	chmod +x ./.hourglass/scripts/register_all_operators.sh
	./.hourglass/scripts/register_all_operators.sh

.PHONY: deposit-into-strategies
deposit-into-strategies:
	@bash -c '\
		set -euo pipefail; \
		eval "$$(go run ./go-scripts/parse_operator_keys.go eigen.toml)"; \
		eval "$$(go run ./go-scripts/parse_rpc_url.go eigen.toml)"; \
		eval "$$(go run ./go-scripts/parse_strategies.go eigen.toml)"; \
		chmod +x ./.hourglass/scripts/deposit-into-strategies.sh; \
		for key in $$OPERATOR_KEYS_list; do \
			for (( j=0; j<$$STRATEGY_COUNT; j++ )); do \
				strategy=$$(eval echo \$$STRATEGY_$${j}_ADDRESS); \
				echo "📥 Depositing into strategy $$strategy with key $$key"; \
				OPERATOR_PVT_KEY=$$key STRATEGY_ADDRESS=$$strategy RPC_URL=$$RPC_URL ./.hourglass/scripts/deposit-into-strategies.sh; \
			done; \
		done'

.PHONY: modify-allocations
modify-allocations:
	@bash -c '\
		set -euo pipefail; \
		eval "$$(go run ./go-scripts/parse_operator_allocations.go eigen.toml)"; \
		eval "$$(go run ./go-scripts/parse_rpc_url.go eigen.toml)"; \
		chmod +x ./.hourglass/scripts/modify-allocations.sh; \
		for (( strat=0; strat<$$STRATEGY_COUNT; strat++ )); do \
			GROUP_COUNT=$$(eval echo \$$STRATEGY_$${strat}_ALLOCATION_GROUP_COUNT); \
			for (( group=0; group<$$GROUP_COUNT; group++ )); do \
				STRATEGY_ADDRESS=$$(eval echo \$$STRATEGY_$${strat}_ADDRESS); \
				OPERATOR_PVT_KEY=$$(eval echo \$$STRATEGY_$${strat}_GROUP_$${group}_OPERATOR_PVT_KEY); \
				ALLOCATION=$$(eval echo \$$STRATEGY_$${strat}_GROUP_$${group}_ALLOCATION); \
				OPERATOR_SET_ID=$$(eval echo \$$STRATEGY_$${strat}_GROUP_$${group}_OPERATOR_SET_ID); \
				AVS_ADDRESS=$$(eval echo \$$STRATEGY_$${strat}_GROUP_$${group}_AVS_ADDRESS); \
				echo \"🔁 Modifying allocation: strategy=$$STRATEGY_ADDRESS, operatorSetID=$$OPERATOR_SET_ID, allocation=$$ALLOCATION\"; \
				OPERATOR_PVT_KEY=$$OPERATOR_PVT_KEY STRATEGY_ADDRESS=$$STRATEGY_ADDRESS AVS_ADDRESS=$$AVS_ADDRESS OPERATOR_SET_ID=$$OPERATOR_SET_ID ALLOCATION=$$ALLOCATION RPC_URL=$$RPC_URL ./.hourglass/scripts/modify-allocations.sh; \
			done; \
		done'




	













