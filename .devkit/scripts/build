#!/usr/bin/env bash
set -e

# source in helper functions
source "$( dirname "${BASH_SOURCE[0]}" )/helpers/helpers.sh"

# Check if required tools are available
ensureMake
ensureForge
ensureDocker

# Parse command line arguments
IMAGE_NAME=""

while [[ $# -gt 0 ]]; do
  case $1 in
    --image)
      IMAGE_NAME="$2"
      shift 2
      ;;
    --image=*)
      IMAGE_NAME="${1#*=}"
      shift 1
      ;;
    *)
      echo "Unknown option $1" >&2
      exit 1
      ;;
  esac
done

# Use provided image name or fallback to default
if [ -z "$IMAGE_NAME" ]; then
  project_name=$(basename "$(pwd)")
  IMAGE_NAME="${project_name}-performer-op-set-1"
fi

log "Building contracts..."
(cd .devkit/contracts && forge clean && forge build -- --include ../../contracts/**/*.sol && cd -) >&2

# Build the contracts and dependencies
log "Building AVS performer..."

# Build the container
BUILD_CONTAINER=true ./.hourglass/scripts/build.sh --image "$IMAGE_NAME" >&2

# Get the build info
if [ -f "/tmp/build_info" ]; then
  source /tmp/build_info
else
  echo "Error: Build info not found"
  exit 1
fi

log "Built container: $IMAGE_NAME"
log "Image ID: $IMAGE_ID"

# Create JSON output with component
RESULT=$(jq -n \
    --arg component "performer" \
    '{
        artifact: {
            component: $component
        }
    }')

# Print the JSON to stdout
echo "$RESULT" | jq -c .

log "Build completed successfully." 